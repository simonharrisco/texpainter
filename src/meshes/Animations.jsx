/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 animations.gltf
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";
import { useLoader } from "@react-three/fiber";
import { TextureLoader } from "three/src/loaders/TextureLoader";

export function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/animations.gltf");
  console.log(animations);
  const { actions } = useAnimations(animations, group);
  console.log(actions);

  const texture = useLoader(TextureLoader, "/animationsNotTex1.png");
  texture.encoding = THREE.sRGBEncoding;

  React.useEffect(() => {
    console.log("props.actionName", props.actionName);

    if (props?.setActions) {
      props.setActions(Object.keys(actions));
    }

    if (!props.actionName && actions?.["Idle"]) {
      actions?.["Idle"].reset().fadeIn(0.1).play();
    }

    if (props?.actionName && actions?.[props.actionName]) {
      actions?.[props.actionName].reset().fadeIn(0.1).play();
    }
    return () => actions?.[props.actionName]?.fadeOut(0.1);
  }, [actions, props.actionName, props.setActions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="AuxScene">
        <group position={[0, -58.009, 1.14]}>
          <group
            name="Root"
            position={[-6.725, 0.329, 10.934]}
            rotation={[-0.153, -0.096, -0.041]}
          >
            <primitive object={nodes.Pelvis} />
          </group>
          <skinnedMesh
            name="SK_Chr_Kid_Superhero_01"
            geometry={nodes.SK_Chr_Kid_Superhero_01.geometry}
            skeleton={nodes.SK_Chr_Kid_Superhero_01.skeleton}
          >
            <meshStandardMaterial
              map={texture}
              skinning={true}
              morphTargets={true}
              morphNormals={true}
              name="Material.001"
              emissive={0}
              color={0xffffff}
              emissiveIntensity={0}
              metalness={0}
              roughness={0.5}
              opacity={1}
            />
          </skinnedMesh>
        </group>
      </group>
    </group>
  );
}

// useGLTF.preload("/animations.gltf");
